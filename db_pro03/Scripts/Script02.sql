DECLARE
	x NUMBER;
	y NUMBER := 0;
	z CONSTANT NUMBER := 20;
BEGIN
	x := 10;
	-- z := 30;
	DBMS_OUTPUT.PUT_LINE('변수 x ->' || x);
	DBMS_OUTPUT.PUT_LINE('변수 y ->' || y);
	DBMS_OUTPUT.PUT_LINE('상수 z ->' || z);
END;

DECLARE
	str VARCHAR2(10);
	--크기 지정 필수
BEGIN
	str := 'Hello';
	DBMS_OUTPUT.PUT_LINE(str);
END;


DECLARE
	EMP_ID	NUMBER;
	EMP_NAME VARCHAR2(100);
BEGIN
	SELECT EMPLOYEE_ID
		 , FIRST_NAME
	  INTO EMP_ID, EMP_NAME
	  FROM EMPLOYEES
	 WHERE EMPLOYEE_ID = 100;
	DBMS_OUTPUT.PUT_LINE(EMP_ID || '/' || EMP_NAME);
END;

--참조변수 테이블명%TYPE:기존 테이블을 컬럼단위로 참조
DECLARE
	EMP_ID	 EMPLOYEES.EMPLOYEE_ID%TYPE;
	EMP_NAME EMPLOYEES.FIRST_NAME%TYPE;
BEGIN
	SELECT EMPLOYEE_ID
		 , FIRST_NAME
	  INTO EMP_ID, EMP_NAME
	  FROM EMPLOYEES
	 WHERE EMPLOYEE_ID = 100;
	DBMS_OUTPUT.PUT_LINE(EMP_ID || '/' || EMP_NAME);
END;

--참조변수 테이블명%ROWTYPE:기존 테이블을 행단위로 참조
DECLARE
	EMP    EMPLOYEES%ROWTYPE;
BEGIN
	SELECT *
	  INTO EMP
	  FROM EMPLOYEES
	 WHERE EMPLOYEE_ID = 100;
	DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.FIRST_NAME);
	DBMS_OUTPUT.PUT_LINE(EMP.SALARY || '/' || EMP.PHONE_NUMBER);
END;




DECLARE
	EMP    EMPLOYEES%ROWTYPE;
	ID NUMBER := 100;
BEGIN
   LOOP
	  SELECT *
	    INTO EMP
	    FROM EMPLOYEES
	   WHERE EMPLOYEE_ID = ID;
	  DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.FIRST_NAME);
   	  ID := ID + 1;
   	  IF(ID >= 150) THEN
   	  	EXIT;
   	  END IF;
    END LOOP;
END;




DECLARE
	EMP    EMPLOYEES%ROWTYPE;
	ID NUMBER := 100;
BEGIN
   LOOP
	 SELECT *
	   INTO EMP
	   FROM EMPLOYEES
	  WHERE EMPLOYEE_ID = ID;
   	 
	 IF(NVL(EMP.COMMISSION_PCT,0) = 0) THEN
	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY);
   	 ELSE
   	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY * (1 + EMP.COMMISSION_PCT));
   	 END IF;
   	 
	 ID := ID + 1;
	
   	 IF(ID >= 150) THEN
   	  	EXIT;
   	 END IF;
   END LOOP;
END;




DECLARE
	EMP    EMPLOYEES%ROWTYPE;
	ID NUMBER := 100;
BEGIN
   LOOP
	 SELECT *
	   INTO EMP
	   FROM EMPLOYEES
	  WHERE EMPLOYEE_ID = ID;
   	 
	 IF(NVL(EMP.COMMISSION_PCT,0) = 0) THEN
	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY);
   	 ELSIF(NVL(EMP.COMMISSION_PCT,0) > 0) THEN
   	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY * (1 + EMP.COMMISSION_PCT));
   	 END IF;
   	 
	 ID := ID + 1;
	
   	 IF(ID >= 150) THEN
   	  	EXIT;
   	 END IF;
   END LOOP;
END;




DECLARE
	EMP    EMPLOYEES%ROWTYPE;
BEGIN
   FOR ID IN REVERSE 100..150 LOOP
	 SELECT *
	   INTO EMP
	   FROM EMPLOYEES
	  WHERE EMPLOYEE_ID = ID;
   	 
	 IF(NVL(EMP.COMMISSION_PCT,0) = 0) THEN
	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY);
   	 ELSIF(NVL(EMP.COMMISSION_PCT,0) > 0) THEN
   	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY * (1 + EMP.COMMISSION_PCT));
   	 END IF;
   END LOOP;
END;




DECLARE
	EMP    EMPLOYEES%ROWTYPE;
	ID NUMBER := 100;
BEGIN
   WHILE ID < 150 LOOP
	 SELECT *
	   INTO EMP
	   FROM EMPLOYEES
	  WHERE EMPLOYEE_ID = ID;
   	 
	 IF(NVL(EMP.COMMISSION_PCT,0) = 0) THEN
	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY);
   	 ELSIF(NVL(EMP.COMMISSION_PCT,0) > 0) THEN
   	 	 DBMS_OUTPUT.PUT_LINE(EMP.EMPLOYEE_ID || '/' || EMP.SALARY * (1 + EMP.COMMISSION_PCT));
   	 END IF;
   	 
   	 ID := ID + 1;
   END LOOP;
END;


SELECT * FROM EMPLOYEES;

